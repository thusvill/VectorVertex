# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq ($(shell echo "test"), "test")
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

ifeq ($(origin CC), default)
  CC = gcc
endif
ifeq ($(origin CXX), default)
  CXX = g++
endif
ifeq ($(origin AR), default)
  AR = ar
endif
RESCOMP = windres
PCH = src/vvpch.hpp
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
DEFINES += -DBUILD_DLL
INCLUDES += -Isrc -Isrc/Core -Isrc/Core/Math -Isrc/Core/Utils -Isrc/Plattform -Isrc/Plattform/Vulkan -Isrc/Plattform/Vulkan/Render_Systems -Isrc/Render -Isrc/VectorVertex -Isrc/VectorVertex/Events -Isrc/VectorVertex/Layers -Isrc/VectorVertex/Panels -Isrc/VectorVertex/Scene -Ivendor -Ivendor/entt -Ivendor/imgui -Ivendor/SPIRV-Cross/include -Ivendor/ImGuizmo -Ivendor/yaml-cpp/include -Ivendor/shaderc/include -Ivendor/fbx/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lglfw -lfmt -lyaml-cpp -lglslang -lshaderc -lshaderc_combined -lSPIRV-Tools -lvulkan
LDDEPS +=
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/VectorVertex/Debug
TARGET = $(TARGETDIR)/libVectorVertex.so
OBJDIR = ../bin-int/VectorVertex/Debug
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -fPIC -g -w -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -fPIC -g -std=c++17 -w -g
ALL_LDFLAGS += $(LDFLAGS) -shared -Wl,-soname=libVectorVertex.so

else ifeq ($(config),release)
TARGETDIR = ../bin/VectorVertex/Release
TARGET = $(TARGETDIR)/libVectorVertex.so
OBJDIR = ../bin-int/VectorVertex/Release
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O2 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O2 -fPIC -std=c++17
ALL_LDFLAGS += $(LDFLAGS) -shared -Wl,-soname=libVectorVertex.so -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/Application.o
GENERATED += $(OBJDIR)/Buffer.o
GENERATED += $(OBJDIR)/EditorCamera.o
GENERATED += $(OBJDIR)/Editor_Layer.o
GENERATED += $(OBJDIR)/Entity.o
GENERATED += $(OBJDIR)/FrameBuffer.o
GENERATED += $(OBJDIR)/GraphicsContext.o
GENERATED += $(OBJDIR)/Imgui_Layer.o
GENERATED += $(OBJDIR)/Keyboard_inputs.o
GENERATED += $(OBJDIR)/Layer.o
GENERATED += $(OBJDIR)/LayerStack.o
GENERATED += $(OBJDIR)/LinuxWindow.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/Material.o
GENERATED += $(OBJDIR)/Math.o
GENERATED += $(OBJDIR)/PlattformUtils.o
GENERATED += $(OBJDIR)/RenderCommand.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/RendererAPI.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/SceneHierarchy.o
GENERATED += $(OBJDIR)/SceneSerializer.o
GENERATED += $(OBJDIR)/Shader.o
GENERATED += $(OBJDIR)/UUID.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/WindowInputs.o
GENERATED += $(OBJDIR)/vk_api_data.o
GENERATED += $(OBJDIR)/vk_buffer.o
GENERATED += $(OBJDIR)/vk_camera.o
GENERATED += $(OBJDIR)/vk_context.o
GENERATED += $(OBJDIR)/vk_descriptors.o
GENERATED += $(OBJDIR)/vk_device.o
GENERATED += $(OBJDIR)/vk_framebuffer.o
GENERATED += $(OBJDIR)/vk_image.o
GENERATED += $(OBJDIR)/vk_light_render_system.o
GENERATED += $(OBJDIR)/vk_mesh_render_system.o
GENERATED += $(OBJDIR)/vk_model.o
GENERATED += $(OBJDIR)/vk_offscreen.o
GENERATED += $(OBJDIR)/vk_pipeline.o
GENERATED += $(OBJDIR)/vk_render_system.o
GENERATED += $(OBJDIR)/vk_renderer.o
GENERATED += $(OBJDIR)/vk_renderer_api.o
GENERATED += $(OBJDIR)/vk_shader.o
GENERATED += $(OBJDIR)/vk_swap_chain.o
GENERATED += $(OBJDIR)/vk_texture.o
GENERATED += $(OBJDIR)/vk_window.o
GENERATED += $(OBJDIR)/vvpch.o
OBJECTS += $(OBJDIR)/Application.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/EditorCamera.o
OBJECTS += $(OBJDIR)/Editor_Layer.o
OBJECTS += $(OBJDIR)/Entity.o
OBJECTS += $(OBJDIR)/FrameBuffer.o
OBJECTS += $(OBJDIR)/GraphicsContext.o
OBJECTS += $(OBJDIR)/Imgui_Layer.o
OBJECTS += $(OBJDIR)/Keyboard_inputs.o
OBJECTS += $(OBJDIR)/Layer.o
OBJECTS += $(OBJDIR)/LayerStack.o
OBJECTS += $(OBJDIR)/LinuxWindow.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/Material.o
OBJECTS += $(OBJDIR)/Math.o
OBJECTS += $(OBJDIR)/PlattformUtils.o
OBJECTS += $(OBJDIR)/RenderCommand.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/RendererAPI.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/SceneHierarchy.o
OBJECTS += $(OBJDIR)/SceneSerializer.o
OBJECTS += $(OBJDIR)/Shader.o
OBJECTS += $(OBJDIR)/UUID.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/WindowInputs.o
OBJECTS += $(OBJDIR)/vk_api_data.o
OBJECTS += $(OBJDIR)/vk_buffer.o
OBJECTS += $(OBJDIR)/vk_camera.o
OBJECTS += $(OBJDIR)/vk_context.o
OBJECTS += $(OBJDIR)/vk_descriptors.o
OBJECTS += $(OBJDIR)/vk_device.o
OBJECTS += $(OBJDIR)/vk_framebuffer.o
OBJECTS += $(OBJDIR)/vk_image.o
OBJECTS += $(OBJDIR)/vk_light_render_system.o
OBJECTS += $(OBJDIR)/vk_mesh_render_system.o
OBJECTS += $(OBJDIR)/vk_model.o
OBJECTS += $(OBJDIR)/vk_offscreen.o
OBJECTS += $(OBJDIR)/vk_pipeline.o
OBJECTS += $(OBJDIR)/vk_render_system.o
OBJECTS += $(OBJDIR)/vk_renderer.o
OBJECTS += $(OBJDIR)/vk_renderer_api.o
OBJECTS += $(OBJDIR)/vk_shader.o
OBJECTS += $(OBJDIR)/vk_swap_chain.o
OBJECTS += $(OBJDIR)/vk_texture.o
OBJECTS += $(OBJDIR)/vk_window.o
OBJECTS += $(OBJDIR)/vvpch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking VectorVertex
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning VectorVertex
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/Application.o: src/Core/Application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Keyboard_inputs.o: src/Core/Keyboard_inputs.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/Core/Layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LayerStack.o: src/Core/LayerStack.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/Core/Log.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Math.o: src/Core/Math/Math.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/UUID.o: src/Core/UUID.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/PlattformUtils.o: src/Core/Utils/PlattformUtils.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LinuxWindow.o: src/Plattform/Linux/LinuxWindow.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_light_render_system.o: src/Plattform/Vulkan/Render_Systems/vk_light_render_system.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_mesh_render_system.o: src/Plattform/Vulkan/Render_Systems/vk_mesh_render_system.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_api_data.o: src/Plattform/Vulkan/vk_api_data.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_buffer.o: src/Plattform/Vulkan/vk_buffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_camera.o: src/Plattform/Vulkan/vk_camera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_context.o: src/Plattform/Vulkan/vk_context.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_descriptors.o: src/Plattform/Vulkan/vk_descriptors.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_device.o: src/Plattform/Vulkan/vk_device.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_framebuffer.o: src/Plattform/Vulkan/vk_framebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_image.o: src/Plattform/Vulkan/vk_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_model.o: src/Plattform/Vulkan/vk_model.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_offscreen.o: src/Plattform/Vulkan/vk_offscreen.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_pipeline.o: src/Plattform/Vulkan/vk_pipeline.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_render_system.o: src/Plattform/Vulkan/vk_render_system.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_renderer.o: src/Plattform/Vulkan/vk_renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_renderer_api.o: src/Plattform/Vulkan/vk_renderer_api.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_shader.o: src/Plattform/Vulkan/vk_shader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_swap_chain.o: src/Plattform/Vulkan/vk_swap_chain.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_texture.o: src/Plattform/Vulkan/vk_texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vk_window.o: src/Plattform/Vulkan/vk_window.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/WindowInputs.o: src/Plattform/WindowInputs.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/Render/Buffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FrameBuffer.o: src/Render/FrameBuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GraphicsContext.o: src/Render/GraphicsContext.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Material.o: src/Render/Material.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RenderCommand.o: src/Render/RenderCommand.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/Render/Renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RendererAPI.o: src/Render/RendererAPI.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Shader.o: src/Render/Shader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/Render/Window.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Editor_Layer.o: src/VectorVertex/Layers/Editor_Layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Imgui_Layer.o: src/VectorVertex/Layers/Imgui_Layer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneHierarchy.o: src/VectorVertex/Panels/SceneHierarchy.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/EditorCamera.o: src/VectorVertex/Scene/EditorCamera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Entity.o: src/VectorVertex/Scene/Entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/VectorVertex/Scene/Scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneSerializer.o: src/VectorVertex/Scene/SceneSerializer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vvpch.o: src/vvpch.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif